{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Gaurav Singh\\\\Downloads\\\\web3lab-lottery\\\\web3lab-lottery\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gaurav Singh\\\\Downloads\\\\web3lab-lottery\\\\web3lab-lottery\\\\client\\\\src\\\\components\\\\Manager.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Manager.css\";\n\nconst Manager = ({\n  state\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        account = _useState2[0],\n        setAccount = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cbalance = _useState4[0],\n        setCbalance = _useState4[1];\n\n  const _useState5 = useState(\"No winner yet\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        lwinner = _useState6[0],\n        setLwinner = _useState6[1];\n\n  const setAccountListener = provider => {\n    provider.on(\"accountsChanged\", accounts => {\n      setAccount(accounts[0]);\n    });\n  };\n\n  useEffect(() => {\n    const getAccount = async () => {\n      const web3 = state.web3;\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n      setAccountListener(web3.givenProvider);\n      setAccount(accounts[0]);\n    };\n\n    state.web3 && getAccount();\n  }, [state, state.web3]);\n\n  const contractBalance = async () => {\n    const contract = state.contract;\n\n    try {\n      const balance = await contract.methods.getBalance().call({\n        from: account\n      });\n      console.log(balance);\n      setCbalance(balance);\n    } catch (e) {\n      setCbalance(\"You are not the manager\");\n    }\n  };\n\n  const winner = async () => {\n    const contract = state.contract;\n\n    try {\n      await contract.methods.pickWinner().send({\n        from: account\n      });\n      const lotteryWinner = await contract.methods.winner().call();\n      console.log(lotteryWinner);\n      setLwinner(lotteryWinner);\n    } catch (e) {\n      if (e.message.includes(\"You are not the manager\")) {\n        setLwinner(\"You are not the manager\");\n      } else if (e.message.includes(\"Players are less than 3\")) {\n        setLwinner(\"There are less than 3 players\");\n      } else {\n        setLwinner(\"No winner yet\");\n      }\n    }\n  };\n\n  return React.createElement(\"ul\", {\n    className: \"list-group\",\n    id: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"list-group-item\",\n    \"aria-disabled\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Connected account :\"), \" \", account), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \" Winner : \"), lwinner, React.createElement(\"button\", {\n    className: \"button1\",\n    onClick: winner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Click For Winner\")), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Balnace : \"), \" \", cbalance, \" ETH\", React.createElement(\"button\", {\n    className: \"button1\",\n    onClick: contractBalance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Click For Balance\"))));\n};\n\nexport default Manager;","map":{"version":3,"sources":["C:/Users/Gaurav Singh/Downloads/web3lab-lottery/web3lab-lottery/client/src/components/Manager.js"],"names":["React","useState","useEffect","Manager","state","account","setAccount","cbalance","setCbalance","lwinner","setLwinner","setAccountListener","provider","on","accounts","getAccount","web3","eth","getAccounts","console","log","givenProvider","contractBalance","contract","balance","methods","getBalance","call","from","e","winner","pickWinner","send","lotteryWinner","message","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Manager.css\";\r\n\r\nconst Manager = ({ state }) => {\r\n  const [account, setAccount] = useState(\"\");\r\n  const [cbalance, setCbalance] = useState(0);\r\n  const [lwinner, setLwinner] = useState(\"No winner yet\");\r\n\r\n  const setAccountListener = (provider) => {\r\n    provider.on(\"accountsChanged\", (accounts) => {\r\n      setAccount(accounts[0]);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    const getAccount = async () => {\r\n      const { web3 } = state;\r\n      const accounts = await web3.eth.getAccounts();\r\n      console.log(accounts);\r\n      setAccountListener(web3.givenProvider);\r\n      setAccount(accounts[0]);\r\n    };\r\n    state.web3 && getAccount();\r\n  }, [state, state.web3]);\r\n\r\n  const contractBalance = async () => {\r\n    const { contract } = state;\r\n    try {\r\n      const balance = await contract.methods\r\n        .getBalance()\r\n        .call({ from: account });\r\n      console.log(balance);\r\n      setCbalance(balance);\r\n    } catch (e) {\r\n      setCbalance(\"You are not the manager\");\r\n    }\r\n  };\r\n\r\n  const winner = async () => {\r\n    const { contract } = state;\r\n    try {\r\n      await contract.methods.pickWinner().send({ from: account });\r\n      const lotteryWinner = await contract.methods.winner().call();\r\n      console.log(lotteryWinner);\r\n      setLwinner(lotteryWinner);\r\n    } catch (e) {\r\n      if (e.message.includes(\"You are not the manager\")) {\r\n        setLwinner(\"You are not the manager\");\r\n      } else if (e.message.includes(\"Players are less than 3\")) {\r\n        setLwinner(\"There are less than 3 players\");\r\n      } else {\r\n        setLwinner(\"No winner yet\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <ul className=\"list-group\" id=\"list\">\r\n      <div className=\"center\">\r\n        <li className=\"list-group-item\" aria-disabled=\"true\">\r\n          <b>Connected account :</b> {account}\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <b> Winner : </b>\r\n          {lwinner}\r\n          <button className=\"button1\" onClick={winner}>\r\n            Click For Winner\r\n          </button>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <b>Balnace : </b> {cbalance} ETH\r\n          <button className=\"button1\" onClick={contractBalance}>\r\n            Click For Balance\r\n          </button>\r\n        </li>\r\n      </div>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Manager;"]},"metadata":{},"sourceType":"module"}