{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Gaurav Singh\\\\Downloads\\\\web3lab-lottery\\\\web3lab-lottery\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gaurav Singh\\\\Downloads\\\\web3lab-lottery\\\\web3lab-lottery\\\\client\\\\src\\\\components\\\\Players.js\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Players = ({\n  state,\n  address\n}) => {\n  const _useState = useState(\"No account connected\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        account = _useState2[0],\n        setAccount = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        registerdPlayers = _useState4[0],\n        setRegisterdPlayers = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        reload = _useState6[0],\n        setReload = _useState6[1];\n\n  const reloadEffect = () => {\n    setReload(!reload);\n  };\n\n  const setAccountListener = provider => {\n    provider.on(\"accountsChanged\", accounts => {\n      setAccount(accounts[0]);\n    });\n  };\n\n  useEffect(() => {\n    const getAccount = async () => {\n      const web3 = state.web3;\n      const accounts = await web3.eth.getAccounts(); //  console.log(accounts);\n\n      setAccountListener(web3.givenProvider);\n      setAccount(accounts[0]);\n    };\n\n    state.web3 && getAccount();\n  }, [state, state.web3]);\n  useEffect(() => {\n    const getPlayers = async () => {\n      const contract = state.contract;\n      const players = await contract.methods.allPlayers().call();\n      const registerdPlayers = await Promise.all(players.map(player => {\n        return player;\n      }));\n      console.log(registerdPlayers);\n      setRegisterdPlayers(registerdPlayers);\n      reloadEffect();\n    };\n\n    state.contract && getPlayers();\n  }, [state, state.contract, reload]);\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"list-group\",\n    id: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"list-group-item\",\n    \"aria-disabled\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Connected account :\"), \" \", account), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Please pay 1 ether on this contract address : \"), \" \", address), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Registerd Players \"), \":\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), registerdPlayers.length !== 0 && registerdPlayers.map(name => React.createElement(\"p\", {\n    key: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, name))))));\n};\n\nexport default Players;","map":{"version":3,"sources":["C:/Users/Gaurav Singh/Downloads/web3lab-lottery/web3lab-lottery/client/src/components/Players.js"],"names":["React","useEffect","useState","Players","state","address","account","setAccount","registerdPlayers","setRegisterdPlayers","reload","setReload","reloadEffect","setAccountListener","provider","on","accounts","getAccount","web3","eth","getAccounts","givenProvider","getPlayers","contract","players","methods","allPlayers","call","Promise","all","map","player","console","log","length","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AACA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAAA,oBACRH,QAAQ,CAAC,sBAAD,CADA;AAAA;AAAA,QAC/BI,OAD+B;AAAA,QACtBC,UADsB;;AAAA,qBAEUL,QAAQ,CAAC,EAAD,CAFlB;AAAA;AAAA,QAE/BM,gBAF+B;AAAA,QAEbC,mBAFa;;AAAA,qBAGVP,QAAQ,CAAC,KAAD,CAHE;AAAA;AAAA,QAG/BQ,MAH+B;AAAA,QAGvBC,SAHuB;;AAKtC,QAAMC,YAAY,GAAG,MAAM;AACzBD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAIA,QAAMG,kBAAkB,GAAIC,QAAD,IAAc;AACvCA,IAAAA,QAAQ,CAACC,EAAT,CAAY,iBAAZ,EAAgCC,QAAD,IAAc;AAC3CT,MAAAA,UAAU,CAACS,QAAQ,CAAC,CAAD,CAAT,CAAV;AACD,KAFD;AAGD,GAJD;;AAKAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,UAAU,GAAG,YAAY;AAAA,YACrBC,IADqB,GACZd,KADY,CACrBc,IADqB;AAE7B,YAAMF,QAAQ,GAAG,MAAME,IAAI,CAACC,GAAL,CAASC,WAAT,EAAvB,CAF6B,CAG7B;;AACAP,MAAAA,kBAAkB,CAACK,IAAI,CAACG,aAAN,CAAlB;AAEAd,MAAAA,UAAU,CAACS,QAAQ,CAAC,CAAD,CAAT,CAAV;AACD,KAPD;;AAQAZ,IAAAA,KAAK,CAACc,IAAN,IAAcD,UAAU,EAAxB;AACD,GAVQ,EAUN,CAACb,KAAD,EAAQA,KAAK,CAACc,IAAd,CAVM,CAAT;AAWAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,UAAU,GAAG,YAAY;AAAA,YACrBC,QADqB,GACRnB,KADQ,CACrBmB,QADqB;AAE7B,YAAMC,OAAO,GAAG,MAAMD,QAAQ,CAACE,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB;AACA,YAAMnB,gBAAgB,GAAG,MAAMoB,OAAO,CAACC,GAAR,CAC7BL,OAAO,CAACM,GAAR,CAAaC,MAAD,IAAY;AACtB,eAAOA,MAAP;AACD,OAFD,CAD6B,CAA/B;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYzB,gBAAZ;AACAC,MAAAA,mBAAmB,CAACD,gBAAD,CAAnB;AACAI,MAAAA,YAAY;AACb,KAZD;;AAaAR,IAAAA,KAAK,CAACmB,QAAN,IAAkBD,UAAU,EAA5B;AACD,GAfQ,EAeN,CAAClB,KAAD,EAAQA,KAAK,CAACmB,QAAd,EAAwBb,MAAxB,CAfM,CAAT;AAgBA,SACE,0CACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAA2B,IAAA,EAAE,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAgC,qBAAc,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,OAC8BJ,OAD9B,CADF,EAIE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADF,OACyDD,OADzD,CAJF,EAOE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIGG,gBAAgB,CAAC0B,MAAjB,KAA4B,CAA5B,IACC1B,gBAAgB,CAACsB,GAAjB,CAAsBK,IAAD,IAAU;AAAG,IAAA,GAAG,EAAEA,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeA,IAAf,CAA/B,CALJ,CAPF,CADF,CADF,CADF;AAqBD,CA9DD;;AA+DA,eAAehC,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nconst Players = ({ state, address }) => {\r\n  const [account, setAccount] = useState(\"No account connected\");\r\n  const [registerdPlayers, setRegisterdPlayers] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n\r\n  const reloadEffect = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  const setAccountListener = (provider) => {\r\n    provider.on(\"accountsChanged\", (accounts) => {\r\n      setAccount(accounts[0]);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    const getAccount = async () => {\r\n      const { web3 } = state;\r\n      const accounts = await web3.eth.getAccounts();\r\n      //  console.log(accounts);\r\n      setAccountListener(web3.givenProvider);\r\n\r\n      setAccount(accounts[0]);\r\n    };\r\n    state.web3 && getAccount();\r\n  }, [state, state.web3]);\r\n  useEffect(() => {\r\n    const getPlayers = async () => {\r\n      const { contract } = state;\r\n      const players = await contract.methods.allPlayers().call();\r\n      const registerdPlayers = await Promise.all(\r\n        players.map((player) => {\r\n          return player;\r\n        })\r\n      );\r\n\r\n      console.log(registerdPlayers);\r\n      setRegisterdPlayers(registerdPlayers);\r\n      reloadEffect();\r\n    };\r\n    state.contract && getPlayers();\r\n  }, [state, state.contract, reload]);\r\n  return (\r\n    <>\r\n      <ul className=\"list-group\" id=\"list\">\r\n        <div className=\"center\">\r\n          <li className=\"list-group-item\" aria-disabled=\"true\">\r\n            <b>Connected account :</b> {account}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <b>Please pay 1 ether on this contract address : </b> {address}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <b>Registerd Players </b>:\r\n            <br />\r\n            <br />\r\n            {registerdPlayers.length !== 0 &&\r\n              registerdPlayers.map((name) => <p key={name}>{name}</p>)}\r\n          </li>\r\n        </div>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nexport default Players;"]},"metadata":{},"sourceType":"module"}